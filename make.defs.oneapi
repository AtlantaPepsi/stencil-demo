#
# This file shows the CUDA+GCC toolchain options.
#
# Base compilers and language options
#
CXX=icpx -std=c++17
#
# Compiler flags
#
# -mtune=native is appropriate for most cases.
# -march=native is appropriate if you want portable binaries.
DEFAULT_OPT_FLAGS=-O3 =g
DEFAULT_OPT_FLAGS+=-mtune=native -ffast-math
DEFAULT_OPT_FLAGS+=-mavx -mfma
DEFAULT_OPT_FLAGS+=-Wall #-Werror
#
# SYCL flags
#
# Intel SYCL - https://github.com/intel/llvm/blob/sycl/sycl/doc/GetStartedWithSYCLCompiler.md
#
#SYCLDIR=/opt/isycl
SYCLDIR=
SYCLCXX=dpcpp
SYCLFLAG=-g -std=c++17 -O3
SYCLFLAG+=-fsycl -fsycl-unnamed-lambda -DDPCPP
#SYCLFLAG+=-L${SYCLDIR}/lib -lsycl -Wl,-rpath=${SYCLDIR}/lib
#SYCLFLAG+=-fsycl-targets=nvptx64-nvidia-cuda-sycldevice -DDPCPP_CUDA
#SYCLFLAG+=-Wno-unknown-cuda-version
#
# CodePlay ComputeCpp
#
#SYCLDIR=/opt/sycl/latest
#SYCLDIR=/opt/codeplay/latest
#SYCLCXX=${SYCLDIR}/bin/compute++
#SYCLFLAG=-sycl-driver -I$(SYCLDIR)/include -L$(SYCLDIR)/lib -Wl,-rpath=$(SYCLDIR)/lib -lComputeCpp
#SYCLFLAG+=-std=c++14 -O3
# This makes a huge difference in e.g. nstream...
#SYCLFLAG+=-no-serial-memop
# CentOS7 and Ubuntu14 built for this
#SYCLFLAG+=-D_GLIBCXX_USE_CXX11_ABI=0
# PRK header rejects GCC4
#SYCLFLAG+=--gcc-toolchain=/swtools/gcc/5.4.0
# If not found automatically
#SYCLFLAG+=${OPENCLFLAG}
# NVIDIA target
#SYCLFLAG+=-sycl-target ptx64
#SYCLFLAG+=-DPRK_NO_OPENCL_GPU
#
# hipSYCL
#
#SYCLDIR=/opt/hipsycl/usr/local # if installed with DESTDIR
#SYCLDIR=/opt/hipSYCL
#SYCLDIR=/opt/spack/spack/opt/spack/linux-ubuntu18.04-haswell/gcc-8.3.0/hipsycl-master-appurj662qod4y4z5zxipr2fwthl66k7
#SYCLCXX=${SYCLDIR}/bin/syclcc-clang
#SYCLFLAG=-std=c++17 -O3
#SYCLFLAG+=-DHIPSYCL
# CPU platform
#SYCLFLAG+=--hipsycl-platform=cpu
#SYCLFLAG+=--hipsycl-platform=cuda
#SYCLFLAG+=--hipsycl-gpu-arch=sm_60
#SYCLFLAG+=-Wl,-rpath=/opt/hipSYCL/llvm/lib # wrong?
#SYCLFLAG+=-Wl,-rpath=${SYCLDIR}/lib
#
# CUDA flags
#
# Linux w/ NVIDIA CUDA
# NVCC never supports the latest GCC.
# Use appropriate arch or code is compiled to ancient features.
NVCC=nvcc
CUDAFLAGS=-g -O3 -std=c++11
CUDAFLAGS+=--gpu-architecture=sm_70
#CUDAFLAGS+=--compiler-bindir=/swtools/gcc/7.5.0/bin
#CUDAFLAGS+=-forward-unknown-to-host-compiler -fopenmp
CUDAFLAGS+=-rdc=true # FIXES ptxas fatal   : Unresolved extern function 'cudaCGGetIntrinsicHandle'
# https://github.com/tensorflow/tensorflow/issues/1066#issuecomment-200574233
# heavy hammer:
CUDAFLAGS+=-D_X86INTRIN_H_INCLUDED
